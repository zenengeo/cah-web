plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    // https://github.com/qoomon/gradle-git-versioning-plugin
    id 'me.qoomon.git-versioning' version '6.3.3'
    // https://github.com/node-gradle/gradle-node-plugin
    id "com.github.node-gradle.node" version '3.5.0'
    id "io.github.itzg.simple-boot-image" version '0.5.2'
}

version = '0.0.1-SNAPSHOT'
gitVersioning.apply {
    refs {
        tag('.+') {
            version = '${ref}'
        }
        branch('main') {
            version = '${describe.tag}-SNAPSHOT'
        }
        branch('.+') {
            version = '${ref}-SNAPSHOT'
        }
    }
}

group = 'me.itzg'
java {
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// https://skaffold.dev/docs/pipeline-stages/builders/custom/
test.onlyIf { !System.getenv('SKIP_TESTS') }

repositories {
    mavenCentral()
}

ext {
    uiSrcDir = "${projectDir}/src/main/ui"
    uiDestBuildDir = "${buildDir}/ui"
}

node {
    download = findProperty('downloadNode') as boolean
    version = '16.15.0'
    nodeProjectDir = file(uiSrcDir)
}

task reactTest(type: NpmTask) {
    dependsOn 'npmInstall'
    args = ['run', 'test']
}

task reactBuild(type: NpmTask) {
    dependsOn 'npmInstall'
    inputs.files("${uiSrcDir}/package.json", "${uiSrcDir}/package-lock.json")
    inputs.dir("${uiSrcDir}/src")
    inputs.dir("${uiSrcDir}/public")
    outputs.dir(uiDestBuildDir)

    args = ['run', 'build']

    execOverrides {
        environment('BUILD_PATH', file("${uiDestBuildDir}/static"))
    }
}

tasks.named('bootJar') {
    dependsOn reactBuild
    classpath(file(uiDestBuildDir))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
